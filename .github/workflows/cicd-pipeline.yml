name: Basmatinet CI pipeline

on:
  push:
    branches:
    - main
    - dev
  pull_request:
    branches:
    - main
    - dev
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: mlops-cluster
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: basmatinet-app
  IMAGE: basmatinet
  TAG: v1.0.0

jobs:
  setup-build-publish-deploy:
    name: setup, build, publish, and deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Git clone
      uses: actions/checkout@v3

    - name: Set up virtual environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.8.12
        environment-file: conda-env.yaml

    #- name: Activate the test environment
    #  run: conda activate test
    #  shell: bash -l {0}

    #- name: Unit tests with pytest
    #  run: make unit-tests
    #  shell: bash -l {0}

    #- name: Integration tests
    #  run: make integration-tests
    #  shell: bash -l {0}

    #- name: Build Docker Image
    #  run: make build && make run
    #  shell: bash -l {0}

    #- name: Make a prediction to see if everything is working.
    #  run:  make predict
    #  shell: bash -l {0}

    #- name: Re-tag Docker image
    #  run: docker tag basmatinet gcr.io/$PROJECT_ID/basmatinet:$TAG

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Configure Docker
      run:  |-
        gcloud --quiet auth configure-dockergcloud --quiet auth configure-docker
    #- name: Push image to GCR
    #  run: docker push gcr.io/$PROJECT_ID/basmatinet:$TAG

    #- name: Get GKE Credentials
    #  run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_CLUSTER_ZONE --project $PROJECT_ID

    #- name: Create namespace if it is not existant
    #  run: kubectl apply -f app/k8s/namespace.yaml

    #- name: Create a deployment for the application to GKE cluster
    #  run: kubectl apply -f app/k8s/basmatinet-deployment.yaml --namespace=mlops-test

    #- name: Create a service for the application
    #  run: kubectl apply -f app/k8s/basmatinet-service.yaml --namespace=mlops-test

    #- name: Check if the service is good
    #  run: kubectl get services -n mlops-test
